"""
Django settings for FinalProject project.

Generated by 'django-admin startproject' using Django 4.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
from pathlib import Path
from decouple import config
from cryptography.fernet import Fernet

# Generate encryption key if it doesn't exist
def get_or_create_key():
    key_file = os.path.join(BASE_DIR, 'encryption.key')
    if os.path.exists(key_file):
        with open(key_file, 'rb') as f:
            return f.read()
    else:
        key = Fernet.generate_key()
        with open(key_file, 'wb') as f:
            f.write(key)
        return key

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('DJANGO_SECRET_KEY', default='django-insecure-6z5@_w=+p@9_w_+*9@9_w_+*9@9_w_+*9@9_w_+*9@9_w_+*')

# Encryption key for sensitive data
ENCRYPTION_KEY = get_or_create_key()

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']  # Allow all hosts in development
# For production, specify your actual domain names


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 'GDPUML',  # Removed during cleanup
    'DiabetesPrediction',
    'crispy_forms',
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'DiabetesPrediction.middleware.LoginAttemptMiddleware',
]
MESSAGE_STORAGE = 'django.contrib.messages.storage.session.SessionStorage'


ROOT_URLCONF = 'FinalProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            # os.path.join(BASE_DIR, 'GDPUML/Templates'),  # Removed during cleanup
            os.path.join(BASE_DIR, 'DiabetesPrediction/Templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'FinalProject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

# Database settings with environment variables for flexibility
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv('DB_NAME', 'diabetes_prediction'),
        'USER': os.getenv('DB_USER', 'diabetes_user'),
        'PASSWORD': os.getenv('DB_PASSWORD', 'diabetes_password'),
        'HOST': os.getenv('DB_HOST', 'localhost'),  # Use localhost for local development
        'PORT': os.getenv('DB_PORT', '3306'),
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
            'charset': 'utf8mb4',
            'connect_timeout': 60,
        }
    }
}


# Security Settings
SESSION_COOKIE_SECURE = True  # Cookies only sent over HTTPS
SESSION_EXPIRE_AT_BROWSER_CLOSE = True  # Session expires when browser closes
SESSION_COOKIE_AGE = 3600  # Session timeout after 1 hour
CSRF_COOKIE_SECURE = True

# Security Headers
SECURE_REFERRER_POLICY = 'same-origin'
SECURE_BROWSER_XSS_FILTER = True
X_FRAME_OPTIONS = 'DENY'

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS=[
    # os.path.join(BASE_DIR, 'GDPUML/Templates/static'),  # Removed during cleanup
    os.path.join(BASE_DIR, 'DiabetesPrediction/Templates/static')
]


# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Custom user model
AUTH_USER_MODEL = 'DiabetesPrediction.DiabetesUser'

# Authentication settings
LOGIN_URL = '/diabetes/login/'
LOGIN_REDIRECT_URL = '/diabetes/dashboard/'
LOGOUT_REDIRECT_URL = '/diabetes/'

# CSRF settings
CSRF_TRUSTED_ORIGINS = ['http://127.0.0.1:*', 'http://localhost:*']

# CSRF Cookie settings to prevent issues with browser back button
CSRF_COOKIE_HTTPONLY = False  # Allow JavaScript to access CSRF cookie
CSRF_COOKIE_SECURE = False    # Not requiring HTTPS in development
CSRF_COOKIE_SAMESITE = 'Strict'  # Restrict CSRF cookie to same site
SESSION_COOKIE_SAMESITE = 'Strict'  # Restrict session cookie to same site

# Security settings that help with CSRF protection
SECURITY_MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
]

