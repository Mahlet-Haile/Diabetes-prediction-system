# Generated by Django 4.2.20 on 2025-05-17 15:22

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='DiabetesUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=100)),
                ('last_name', models.CharField(blank=True, max_length=100)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('has_diabetes_history', models.BooleanField(default=False)),
                ('has_family_diabetes_history', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('patient_id', models.CharField(max_length=10)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patients', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Patient',
                'verbose_name_plural': 'Patients',
                'ordering': ['doctor', 'patient_id'],
                'unique_together': {('doctor', 'patient_id')},
            },
        ),
        migrations.CreateModel(
            name='DiabetesAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assessment_date', models.DateTimeField(auto_now_add=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('height', models.FloatField(blank=True, help_text='Height in cm', null=True)),
                ('weight', models.FloatField(blank=True, help_text='Weight in kg', null=True)),
                ('cholesterol', models.CharField(choices=[('normal', 'Normal'), ('above normal', 'Above Normal'), ('well above normal', 'Well Above Normal')], default='normal', max_length=20)),
                ('glucose', models.CharField(choices=[('normal', 'Normal'), ('above normal', 'Above Normal'), ('well above normal', 'Well Above Normal')], default='normal', max_length=20)),
                ('fasting_glucose', models.FloatField(blank=True, help_text='Fasting blood glucose in mg/dL', null=True)),
                ('hba1c', models.FloatField(blank=True, help_text='HbA1c percentage', null=True)),
                ('blood_pressure_systolic', models.IntegerField(blank=True, null=True)),
                ('blood_pressure_diastolic', models.IntegerField(blank=True, null=True)),
                ('smoking_history', models.CharField(choices=[('never', 'Never Smoked'), ('former', 'Former Smoker'), ('current', 'Current Smoker'), ('ever', 'Has Smoked'), ('no_info', 'No Information')], default='no_info', max_length=20)),
                ('smoking', models.BooleanField(default=False, help_text='Legacy field - use smoking_history instead')),
                ('alcohol', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=False)),
                ('physical_activity', models.IntegerField(blank=True, help_text='Minutes per week', null=True)),
                ('family_history', models.BooleanField(default=False, help_text='Family history of diabetes')),
                ('hypertension', models.BooleanField(default=False)),
                ('heart_disease', models.BooleanField(default=False, help_text='History of cardiovascular disease')),
                ('polyuria', models.BooleanField(default=False, help_text='Frequent urination')),
                ('polydipsia', models.BooleanField(default=False, help_text='Excessive thirst')),
                ('polyphagia', models.BooleanField(default=False, help_text='Excessive hunger')),
                ('weight_loss', models.BooleanField(default=False, help_text='Unexplained weight loss')),
                ('fatigue', models.BooleanField(default=False)),
                ('blurred_vision', models.BooleanField(default=False)),
                ('slow_healing', models.BooleanField(default=False, help_text='Slow healing of cuts and wounds')),
                ('tingling', models.BooleanField(default=False, help_text='Tingling or numbness in hands/feet')),
                ('chest_pain', models.BooleanField(default=False)),
                ('shortness_of_breath', models.BooleanField(default=False)),
                ('swelling_in_legs', models.BooleanField(default=False)),
                ('numbness', models.BooleanField(default=False)),
                ('foot_ulcers', models.BooleanField(default=False)),
                ('vision_loss', models.BooleanField(default=False)),
                ('diabetes', models.BooleanField(blank=True, default=False, null=True)),
                ('prediction_probability', models.FloatField(blank=True, null=True)),
                ('diabetes_type', models.CharField(choices=[('none', 'No Diabetes'), ('prediabetes', 'Prediabetes'), ('type1', 'Type 1 Diabetes'), ('type2', 'Type 2 Diabetes'), ('gestational', 'Gestational Diabetes')], default='none', max_length=15)),
                ('confidence_score', models.FloatField(blank=True, null=True)),
                ('risk_score', models.FloatField(blank=True, null=True)),
                ('diagnosis', models.CharField(blank=True, max_length=50, null=True)),
                ('expert_explanation', models.TextField(blank=True, null=True)),
                ('recommendations', models.JSONField(blank=True, null=True)),
                ('complication_risks', models.JSONField(blank=True, null=True)),
                ('diet_recommendations', models.TextField(blank=True, null=True)),
                ('exercise_recommendations', models.TextField(blank=True, null=True)),
                ('monitoring_recommendations', models.TextField(blank=True, null=True)),
                ('doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='doctor_assessments', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='DiabetesPrediction.patient')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Diabetes Assessment',
                'verbose_name_plural': 'Diabetes Assessments',
                'ordering': ['-assessment_date'],
            },
        ),
    ]
